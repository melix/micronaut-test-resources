#
# This file is used to declare the list of libraries
# which are used as dependencies in the project.
# See https://docs.gradle.org/7.4.2/userguide/platforms.html#sub:central-declaration-of-dependencies
#
# For Micronaut, we have 3 kinds of dependencies:
#   - managed dependencies, which are exposed to consumers via a BOM (or version catalog)
#   - managed BOMs, which are imported into the BOM that we generate
#   - all other dependencies, which are implementation details
#
# If a library needs to appear in the BOM of the project, then it must be
# declared with the "managed-" prefix.
# If a BOM needs to be imported in the BOM of the project, then it must be
# declared with the "boms-" prefix.
# Both managed dependencies and BOMs need to have their version declared via
# a managed version (a version which alias starts with "managed-"

[versions]
micronaut = "4.0.0-M5"
micronaut-platform = "4.0.0-M1"
micronaut-aot = "2.0.0-M1"
micronaut-aws = "4.0.0-M8"
micronaut-data = "4.0.0-M7"
micronaut-discovery = "4.0.0-M3"
micronaut-docs = "2.0.0"
micronaut-elasticsearch = "5.0.0-M4"
micronaut-email = "2.0.0-M3"
micronaut-kafka = "5.0.0-M4"
micronaut-logging = "1.0.0-M2"
micronaut-mongodb = "5.0.0-M4"
micronaut-mqtt = "3.0.0-M3"
micronaut-neo4j = "6.0.0-M3"
micronaut-rabbitmq = "4.0.0-M5"
micronaut-r2dbc = "5.0.0-M7"
micronaut-reactor = "3.0.0-M3"
micronaut-redis = "6.0.0-M3"
micronaut-security = "4.0.0-M4"
micronaut-serde = "2.0.0-M8"
micronaut-sql = "5.0.0-M7"
micronaut-test = "4.0.0-M3"
micronaut-gradle-plugin = "4.0.0-M4"
groovy = "4.0.11"
spock = "2.3-groovy-4.0"
vertx-client = "4.4.2"
amazon-awssdk-v1 = "1.12.486"
amazon-awssdk-v2 = "2.20.83"
testcontainers-redis = "1.6.4"

# Managed versions appear in the BOM
managed-testcontainers = "1.18.1"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }

boms-testcontainers = { module = "org.testcontainers:testcontainers-bom", version.ref = "managed-testcontainers" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher"}

micronaut-aws = { module = "io.micronaut.aws:micronaut-aws-bom", version.ref = "micronaut-aws" }
micronaut-data = { module = "io.micronaut.data:micronaut-data-bom", version.ref = "micronaut-data" }
micronaut-discovery = { module = "io.micronaut.discovery:micronaut-discovery-client", version.ref = "micronaut-discovery" }
micronaut-elasticsearch = { module = "io.micronaut.elasticsearch:micronaut-elasticsearch-bom", version.ref = "micronaut-elasticsearch" }
micronaut-email = { module = "io.micronaut.email:micronaut-email-bom", version.ref = "micronaut-email" }
micronaut-kafka = { module = "io.micronaut.kafka:micronaut-kafka-bom", version.ref = "micronaut-kafka" }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }
micronaut-mqtt = { module = "io.micronaut.mqtt:micronaut-mqtt-bom", version.ref = "micronaut-mqtt" }
micronaut-mongodb = { module = "io.micronaut.mongodb:micronaut-mongo-bom", version.ref = "micronaut-mongodb" }
micronaut-neo4j = { module = "io.micronaut.neo4j:micronaut-neo4j-bom", version.ref = "micronaut-neo4j" }
micronaut-rabbitmq = { module = "io.micronaut.rabbitmq:micronaut-rabbitmq-bom", version.ref = "micronaut-rabbitmq" }
micronaut-reactor = { module = "io.micronaut.reactor:micronaut-reactor-bom", version.ref = "micronaut-reactor" }
micronaut-redis = { module = "io.micronaut.redis:micronaut-redis-bom", version.ref = "micronaut-redis" }
micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-bom", version.ref = "micronaut-r2dbc" }
micronaut-security = { module = "io.micronaut.security:micronaut-security-bom", version.ref = "micronaut-security" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-sql = { module = "io.micronaut.sql:micronaut-sql-bom", version.ref = "micronaut-sql" }

testcontainers-core = { module = "org.testcontainers:testcontainers", version = "" }
testcontainers-elasticsearch = { module = "org.testcontainers:elasticsearch", version = "" }
testcontainers-jdbc = { module = "org.testcontainers:jdbc", version = "" }
testcontainers-hivemq = { module = "org.testcontainers:hivemq", version = "" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version = "" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version = "" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb", version = "" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb", version = "" }
testcontainers-mssql = { module = "org.testcontainers:mssqlserver", version = "" }
testcontainers-mysql = { module = "org.testcontainers:mysql", version = "" }
testcontainers-neo4j = { module = "org.testcontainers:neo4j", version = "" }
testcontainers-oracle-xe = { module = "org.testcontainers:oracle-xe", version = "" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version = "" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version = "" }
testcontainers-redis = { module = "com.redis.testcontainers:testcontainers-redis", version.ref = "testcontainers-redis" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc", version = "" }
testcontainers-vault = { module = "org.testcontainers:vault", version = "" }

vertx-mysql = { module = "io.vertx:vertx-mysql-client", version.ref = "vertx.client" }
vertx-mssql = { module = "io.vertx:vertx-mssql-client", version.ref = "vertx.client" }
vertx-postgres = { module = "io.vertx:vertx-pg-client", version.ref = "vertx.client" }
vertx-oracle = { module = "io.vertx:vertx-oracle-client", version.ref = "vertx.client" }
scram = { module = "com.ongres.scram:client", version = "2.1" }
spock = { module = "org.spockframework:spock-core", version.ref = "spock" }

amazon-awssdk-v1-dynamodb = { module = "com.amazonaws:aws-java-sdk-dynamodb", version.ref = "amazon-awssdk-v1"}
amazon-awssdk-v1-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version.ref = "amazon-awssdk-v1"}
amazon-awssdk-v1-sqs = { module = "com.amazonaws:aws-java-sdk-sqs", version.ref = "amazon-awssdk-v1"}
amazon-awssdk-v2-dynamodb = { module = "software.amazon.awssdk:dynamodb", version.ref = "amazon-awssdk-v2"}
amazon-awssdk-v2-s3 = { module = "software.amazon.awssdk:s3", version.ref = "amazon-awssdk-v2"}
amazon-awssdk-v2-sqs = { module = "software.amazon.awssdk:sqs", version.ref = "amazon-awssdk-v2"}
#
# Managed dependencies appear in the BOM
#
# managed-somelib = { module = "group:artifact", version.ref = "managed-somelib" }

#
# Imported BOMs, also appearing in the generated BOM
#
# boms-somebom = { module = "com.foo:somebom", version.ref = "managed-somebom" }

# Other libraries used by the project but non managed

# micronaut-bom = { module = "io.micronaut:micronaut-bom", version.ref = "micronaut" }
# jdoctor = { module = "me.champeau.jdoctor:jdoctor-core", version.ref="jdoctor" }

[bundles]

[plugins]
micronaut-miniapp = { id = "io.micronaut.minimal.application", version.ref = "micronaut-gradle-plugin" }
micronaut-aot = { id = "io.micronaut.aot", version.ref = "micronaut-gradle-plugin" }
